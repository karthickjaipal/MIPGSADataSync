<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="MIPBD" duration-ms="4414" started-at="2020-07-07T04:22:30Z" finished-at="2020-07-07T04:22:34Z">
    <groups>
    </groups>
    <test name="GSAAPI" duration-ms="4414" started-at="2020-07-07T04:22:30Z" finished-at="2020-07-07T04:22:34Z">
      <class name="com.thbs.mip.gsa.GSAApi">
        <test-method status="PASS" signature="accessToken()[pri:0, instance:com.thbs.mip.gsa.GSAApi@457e2f02]" name="accessToken" is-config="true" duration-ms="4115" started-at="2020-07-07T09:52:30Z" finished-at="2020-07-07T09:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accessToken -->
        <test-method status="FAIL" signature="testAPI()[pri:0, instance:com.thbs.mip.gsa.GSAApi@457e2f02]" name="testAPI" duration-ms="276" started-at="2020-07-07T09:52:34Z" finished-at="2020-07-07T09:52:34Z">
          <exception class="io.restassured.path.json.exception.JsonPathException">
            <message>
              <![CDATA[Failed to parse the JSON document]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
	at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
	at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
	at com.thbs.mip.gsa.GSAApi.testAPI(GSAApi.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading 'i', no possible valid JSON value or punctuation could be recognized.
	at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
	at groovy.json.JsonLexer$nextToken.call(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
	at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
	... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- io.restassured.path.json.exception.JsonPathException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAPI -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.thbs.mip.gsa.GSAApi@457e2f02]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-07-07T09:52:34Z" finished-at="2020-07-07T09:52:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.thbs.mip.gsa.GSAApi -->
    </test> <!-- GSAAPI -->
  </suite> <!-- MIPBD -->
</testng-results>
